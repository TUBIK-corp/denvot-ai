import denvot_ai
import discord
import nest_asyncio
from time import sleep
from threading import Thread
from config import DISCORD_TOKEN
from discord.ext import commands

nest_asyncio.apply()
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='>', intents=intents)
can_speak = True
audio_paths = []
voice_client = None

def playlist():
    while 0<1:
        if len(audio_paths) > 0 and voice_client != None and not voice_client.is_playing():
            audio = audio_paths[0]
            print(audio_paths.pop(0))
            voice_client.play(discord.FFmpegPCMAudio(source=audio))
        else: sleep(1)


Thread(target=playlist).start()

def audio_append(message):
    audio_paths.append(denvot_ai.send(message))

def tts_append(message):
    audio_paths.append(denvot_ai.ttss(message))

@bot.command()
async def join(ctx):
    if ctx.author.voice != None: 
        channel = ctx.author.voice.channel
        await channel.connect()
        global voice_client
        voice_client = ctx.voice_client
    else: await ctx.send("–¢—ã –Ω–µ –≤ –≤–æ–π—Å–∏–∫–µ, –ü—É–ø—Å!!! ü§¨")


@bot.command()
async def leave(ctx):
    if ctx.voice_client != None: 
        await ctx.voice_client.disconnect()
        global voice_client
        voice_client = None
    else: await ctx.send("–Ø –Ω–µ –≤ –≤–æ–π—Å–∏–∫–µ, –ü—É–ø—Å!!! ü§¨")

@bot.command()
async def clear(ctx):
    denvot_ai.clear()
    await ctx.send("–ü—Ä–æ—á–∏—â–µ–Ω–æ, –ü—É–ø—Å–∏–∫! üòè")

@bot.command()
async def dnvhelp(ctx):
    await ctx.send("""
    –ë—Ä–∏–≥–∞–¥–∞ –ø—Ä–∏–µ—Ö–∞–ª–∞!
    `/dnv (–∑–∞–ø—Ä–æ—Å)` - –¥–µ–Ω–≤–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ —Ö–æ—Ä–æ—à–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —Å–æ—á–∏–Ω–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏!
    `--tts-rate (—á–∏—Å–ª–æ)` - –¥–æ–ø–æ–ª–Ω—è–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏! 
    `--tts-volume (—á–∏—Å–ª–æ)` - –∫–∞—á–∞–µ—Ç –≥—Ä–æ–º–∫–æ—Å—Ç—å —Ä–µ—á–∏! 
    `--tts-pitch (—á–∏—Å–ª–æ)` - –∏–∑–º–µ–Ω—è–µ—Ç —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ—Ç—Ä–µ–∑–≤–æ–π —Ä–µ—á–∏! 
    `--rvc-pitch (—á–∏—Å–ª–æ)` - –∏–∑–º–µ–Ω—è–µ—Ç —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–∑–≤–æ–π —Ä–µ—á–∏ (—Ä–µ–∫. –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ, –≤–º–µ—Å—Ç–æ --tts-pitch)! 
    """)

@bot.command()
async def dnv(ctx, *args):
    if ctx.voice_client != None:
        message = ctx.message.author.name + ": " + " ".join(args)
        Thread(target=audio_append, args=[message]).start()
        await ctx.send("–Ø –≤ –¥–µ–ª–µ! ü§ì")
    else: await ctx.send("–Ø –Ω–µ –≤ –≤–æ–π—Å–∏–∫–µ, –ü—É–ø—Å!!! ü§¨")

@bot.command()
async def dnvtts(ctx, *args):
    if ctx.voice_client != None:
        message = " ".join(args)
        Thread(target=tts_append, args=[message]).start()
        await ctx.send("–Ø –≤ –¥–µ–ª–µ! ü§ì")
    else: await ctx.send("–Ø –Ω–µ –≤ –≤–æ–π—Å–∏–∫–µ, –ü—É–ø—Å!!! ü§¨")

@bot.command()
async def dnvset(ctx, *args):
    denvot_ai.sets(args[0], args[1], args[2])
    await ctx.send("rvc:" + args[0] + " tts:" + args[1] + " pitch:" + args[2])

bot.run(DISCORD_TOKEN)